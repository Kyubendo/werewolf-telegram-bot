import {highlightPlayer} from "./highlightPlayer";
import {Player} from "../Player/Player";

export const playerGameList = (players: Player[]) => `–ñ–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏ (${players
        .sort(p => -!p.isAlive)
        .filter(e => e.isAlive).length}/${players.length}):\n`
    + players.map(e => `${e.isAlive ? highlightPlayer(e) : `*${e.name}*`}: ${e.isAlive ? 'üôÇ –ñ–∏–≤(–∞)' : `üíÄ –ú–µ—Ä—Ç–≤(–∞) `
        + ` ‚Äî *${e.role?.roleName}*`}`
    ).join('\n')


export const startPlayerList = (players: Player[]) => `–ò–≥—Ä–æ–∫–∏:\n`
    + players.map(p => highlightPlayer(p)).join('\n')

export const endPlayerList = (players: Player[]) => `–ò–≥—Ä–æ–∫–∏:\n` + players
    .sort(p => -!p.isAlive)
    .map(p => {
        let role = {...p.role}
        const previousRoles = []
        while (role.previousRole) {
            role = role.previousRole
            previousRoles.push(role)
        }
        return `${highlightPlayer(p)}:`
            + `\t${p.won ? 'üèÜ –í—ã–∏–≥—Ä–∞–ª(–∞)' : 'üí© –ü—Ä–æ–∏–≥—Ä–∞–ª(–∞)'}\t‚Äî`
            + `\t${p.isAlive ? 'üôÇ –ñ–∏–≤(–∞)' : 'üíÄ –ú–µ—Ä—Ç–≤(–∞)'}\t‚Äî`
            + `\t*${p.role?.roleName}* `
            + (previousRoles.length
                ? `(${previousRoles.map(r => r.roleName && r.roleName.match(/[\p{Emoji}\u200d]+/gu)).join(', ')})`
                : '') + (p.lover ? '‚ù§' : '')
    }).join('\n')
