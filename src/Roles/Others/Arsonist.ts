import {RoleBase} from "../index";
import {generateInlineKeyboard} from "../../Game/playersButtons";
import {findPlayer} from "../../Game/findPlayer";
import {Player} from "../../Player/Player";
import {highlightPlayer} from "../../Utils/highlightPlayer";

export class Arsonist extends RoleBase {
    roleName = '–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å üî•';
    startMessageText = () => Math.random() < .9
        ? '–£ —Ç–µ–±—è –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –ª–µ–≥–∫–æ–≤–æ—Å–ø–ª–∞–º–µ–Ω—è—é—â–µ–≥–æ—Å—è —Ä–∞—Å—Ç–≤–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Å–∂–µ—á—å —Å–µ–ª–æ –¥–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—è. '
        + '–ö–∞–∂–¥—É—é –Ω–æ—á—å —Ç—ã –º–æ–∂–µ—à—å –æ–±–ª–∏–≤–∞—Ç—å —á–µ–π-—Ç–æ –¥–æ–º —ç—Ç–∏–º –∑–µ–ª—å–µ–º. –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–æ–º –∑–∞–ª–∏—Ç, —Ç—ã –º–æ–∂–µ—à—å –∑–∞–∂–µ—á—å –≤—Å–µ '
        + '–∑–∞–ª–∏—Ç—ã–µ, —Å–∂–∏–≥–∞—è –∂–∏—Ç–µ–ª–µ–π –≤–Ω—É—Ç—Ä–∏.'
        : '–¢—ã –º–æ–∂–µ—à—å –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –≤–æ–ª—à–µ–±–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –µ—ë –≤ –¥–æ–º–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –∂–∏—Ç–µ–ª–µ–π. –ú–∞–≥–∏—è —ç—Ç–æ–π '
        + '–∫–∞—Ä—Ç–∏–Ω—ã –º–æ–∂–µ—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤–µ—Å—å –¥–æ–º –≤ –≥–æ—Ä—Å—Ç–∫—É –ø–µ–ø–ª–∞. –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –≤ –æ–¥–Ω–æ–º –¥–æ–º–µ –≤–∏—Å–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∞, —Ç—ã –º–æ–∂–µ—à—å '
        + '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é –º–∞–≥–∏—é, —á—Ç–æ–±—ã –ø–æ–¥–∂–µ—á—å –≤—Å–µ –¥–æ–º–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∞–º–∏, —Å–∂–∏–≥–∞—è –∂–∏—Ç–µ–ª–µ–π –≤–Ω—É—Ç—Ä–∏.'
    weight = () => -7

    nightActionDone = false

    killMessage = () => ({
        text: {
            toChat: (deadPlayer: Player) => `–ö–æ–≥–¥–∞ –¥–µ—Ä–µ–≤–Ω—è –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –∑–∞–º–µ—á–∞–µ—Ç, —á—Ç–æ –¥–æ–º `
                + `${highlightPlayer(deadPlayer)} —É–∂–µ –Ω–µ —Ç–æ—Ç, —á—Ç–æ –±—ã–ª —Ä–∞–Ω—å—à–µ! –í–º–µ—Å—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ —Å–≤–µ—Ç–ª–æ–≥–æ –¥–æ–º–∞ `
                + `–ª–µ–∂–∞—Ç —Ç–æ–ª—å–∫–æ –ø–µ–ø–µ–ª –∏ —Å–∞–∂–∞.`,
            toTarget: '–ö–æ–≥–¥–∞ —Ç—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å –≥–ª–∞–∑–∞, —Ç—ã –≤–∏–¥–∏—à—å —Ç–æ–ª—å–∫–æ –ø–ª–∞–º—è —Å–∂–∏–≥–∞—é—â–µ–µ –≤–µ—Å—å —Ç–≤–æ–π –¥–æ–º... –¢—ã —Å–≥–æ—Ä–µ–ª.',
        },
        gif: 'https://media.giphy.com/media/NTur7XlVDUdqM/giphy.gif', // https://media.giphy.com/media/xUOwGpaKq5xjHNz8Bi/giphy.gif
    })
    stealMessage = () => {
        const preparedPlayers = Arsonist.game.players.filter(p => p.isAlive && p.readyToArson)
        return preparedPlayers.length
            ? '–ò –¥–æ–º–∞ —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã: ' + preparedPlayers.map(p => highlightPlayer(p)).join(', ')
            : '–ù–æ –µ—â—ë –Ω–∏ –æ–¥–∏–Ω –¥–æ–º –Ω–µ –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∂–æ–≥—É.'
    }


    burn = false
    action = () => this.firstChoice()

    firstChoice = () => {
        this.burn = false
        const inline_keyboard = []

        Arsonist.game.players.find(p => p.readyToArson) &&
        inline_keyboard.push([{
            text: '–°–∂–µ—á—å –≤—Å—ë!',
            callback_data: JSON.stringify({type: 'role', choice: 'burn'})
        }])
        Arsonist.game.players.find(p => p !== this.player && !p.readyToArson) &&
        inline_keyboard.push([{
            text: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–æ–º –∫ –ø–æ–¥–∂–æ–≥—É',
            callback_data: JSON.stringify({type: 'role', choice: 'prepare'})
        }])
        inline_keyboard.push([{
            text: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å',
            callback_data: JSON.stringify({type: 'role', choice: 'skip'})
        }])
        Arsonist.game.bot.sendMessage(
            this.player.id,
            '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?',
            {reply_markup: {inline_keyboard}}
        ).then(msg => this.choiceMsgId = msg.message_id)
    }

    prepareHouse = () => Arsonist.game.bot.sendMessage(
        this.player.id,
        '–ö—Ç–æ —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–µ–π –∂–µ—Ä—Ç–≤–æ–π?',
        {
            reply_markup: generateInlineKeyboard(
                Arsonist.game.players.filter(p => p !== this.player && p.isAlive && !p.readyToArson),
                false,
                'role',
                true,
            ),
        }
    ).then(msg => this.choiceMsgId = msg.message_id)


    actionResolve = async () => {
        if (this.burn) Arsonist.game.players.forEach(p => p.readyToArson && p.role?.onKilled(this.player))
        else if (this.targetPlayer) this.targetPlayer.readyToArson = true
    }

    handleChoice = (choice?: string) => {
        let selectedChoice
        switch (choice) {
            case undefined:
            case 'skip':
                selectedChoice = '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'
                this.doneNightAction()
                break
            case 'prepare':
                selectedChoice = '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–æ–º –∫ –ø–æ–¥–∂–æ–≥—É'
                this.prepareHouse()
                break
            case 'burn':
                selectedChoice = '–°–∂–µ—á—å –≤—Å—ë!'
                this.burn = true
                this.doneNightAction()
                break
            case 'back':
                selectedChoice = '–ù–∞–∑–∞–¥'
                this.firstChoice()
                break
            default:
                this.targetPlayer = findPlayer(choice, Arsonist.game.players);
                this.choiceMsgEditText();
                this.doneNightAction()
        }
        selectedChoice && Arsonist.game.bot.editMessageText(
            `–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç ‚Äî *${selectedChoice}*`,
            {message_id: this.choiceMsgId, chat_id: this.player.id,}
        )
    }
}
