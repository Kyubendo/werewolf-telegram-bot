import {RoleBase} from "../Abstract/RoleBase";
import {generateInlineKeyboard} from "../../Game/playersButtons";
import {playerLink} from "../../Utils/playerLink";
import {findPlayer} from "../../Game/findPlayer";
import {Cupid, Undertaker, Wolf} from "..";
import {Player} from "../../Game";
import {firstNightChoiceRoles, nightChoiceRoles} from "../../Utils/teams";

export class PuppetMaster extends RoleBase {
    roleName = '–ö—É–∫–ª–æ–≤–æ–¥ üï¥';
    startMessageText = () => '–ú–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π. ' +
        '–ö–∞–∂–¥—É—é –Ω–æ—á—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–º–µ–Ω—è—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è, ' +
        '—á—Ç–æ–±—ã –¥—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫ –∏–ª–∏ –≥—Ä—É–ø–ø–∞ –∏–≥—Ä–æ–∫–æ–≤ —Å–¥–µ–ª–∞–ª–∞ —Ç–æ, —á—Ç–æ —Ö–æ—á–µ—à—å —Ç—ã, –ø–æ–∫–∞ –Ω–µ –æ—Å—Ç–∞–Ω–µ—à—å—Å—è –æ–¥–∏–Ω.'

    nightActionDone = false;

    puppetTargetPlayer?: Player;
    puppetTargetPlayer2?: Player;

    action = () => this.puppetChoice();

    puppetChoice = () => {
        this.puppetTargetPlayer = undefined;
        this.puppetTargetPlayer2 = undefined;

        PuppetMaster.game.bot.sendMessage(
            this.player.id,
            '–ß—å–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ —Ç—ã —Ö–æ—á–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–æ–π –Ω–æ—á—å—é?',
            {
                reply_markup: generateInlineKeyboard(
                    PuppetMaster.game.players.filter(player => player !== this.player && player.isAlive)
                )
            }
        ).then(msg => this.actionMsgId = msg.message_id)
    }

    puppetTargetPlayerChoice = async () => {
        if (!this.targetPlayer?.role) return;

        if ((nightChoiceRoles.find(nightChoiceRole => this.targetPlayer?.role instanceof nightChoiceRole)
                || (PuppetMaster.game.dayCount === 1 && firstNightChoiceRoles
                    .find(firstNightChoiceRole => this.targetPlayer?.role instanceof firstNightChoiceRole)))
            && !this.targetPlayer.daysLeftToUnfreeze) {
            let playersArray;
            if (this.targetPlayer.role instanceof Undertaker)
                playersArray = PuppetMaster.game.players
                    .filter(player => !player.isAlive);
            else if (this.targetPlayer.role instanceof Cupid)
                playersArray = PuppetMaster.game.players
                    .filter(player => player.isAlive);
            else
                playersArray = PuppetMaster.game.players
                    .filter(player => player !== this.targetPlayer && player.isAlive)

            await PuppetMaster.game.bot.sendMessage(
                this.player.id,
                '–ö–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –≤—ã–±—Ä–∞—Ç—å?',
                {reply_markup: generateInlineKeyboard(playersArray, false)}
            ).then(msg => this.actionMsgId = msg.message_id)
        } else
            await PuppetMaster.game.bot.sendMessage(
                this.player.id,
                `–¢—ã –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ –Ω–µ –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ ${playerLink(this.targetPlayer)} —ç—Ç–æ–π –Ω–æ—á—å—é...` +
                `–í–æ–∑–º–æ–∂–Ω–æ –æ–Ω(–∞) —Å–ø–∏—Ç. –ö–∞–∫–∞—è –¥–æ—Å–∞–¥–∞.`
            )
    }

    cupidSecondTargetPlayerChoice = async () => {
        if (!this.targetPlayer?.role || !this.puppetTargetPlayer?.role) return;

        await PuppetMaster.game.bot.sendMessage(
            this.player.id,
            '–ö–æ–≥–æ –µ—â—ë —Ç—ã —Ö–æ—á–µ—à—å –≤—ã–±—Ä–∞—Ç—å?',
            {
                reply_markup: generateInlineKeyboard(
                    PuppetMaster.game.players
                        .filter(player => player !== this.puppetTargetPlayer && player.isAlive), false
                )
            }
        ).then(msg => this.actionMsgId = msg.message_id)
    }

    actionResolve = async () => {
        if (!this.targetPlayer?.role || !this.targetPlayer.role.targetPlayer) return;

        if (this.puppetTargetPlayer?.role instanceof Wolf) {
            this.puppetTargetPlayer.role.findAllies().forEach(wolf => {
                if (wolf.role?.targetPlayer)
                    wolf.role.targetPlayer = undefined;
            });
        }

        if (this.puppetTargetPlayer)
            this.targetPlayer.role.targetPlayer = this.puppetTargetPlayer;
        if (this.targetPlayer.role instanceof Cupid && this.puppetTargetPlayer2)
            this.targetPlayer.role.targetPlayer2 = this.puppetTargetPlayer2;
    }

    handleChoice = (choice?: string) => {
        if (this.puppetTargetPlayer) {
            this.puppetTargetPlayer2 = findPlayer(choice, PuppetMaster.game.players);
            this.puppetTargetPlayer2 && RoleBase.game.bot.editMessageText(
                `–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç ‚Äî ${playerLink(this.puppetTargetPlayer2)}.`,
                {message_id: this.actionMsgId, chat_id: this.player.id}
            ).then(this.doneNightAction)
        } else if (this.targetPlayer) {
            this.puppetTargetPlayer = findPlayer(choice, PuppetMaster.game.players);
            this.puppetTargetPlayer && RoleBase.game.bot.editMessageText(
                `–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç ‚Äî ${playerLink(this.puppetTargetPlayer)}.`,
                {message_id: this.actionMsgId, chat_id: this.player.id}
            )
            if (this.targetPlayer.role instanceof Cupid)
                this.cupidSecondTargetPlayerChoice();
            else
                this.doneNightAction();
        } else {
            this.targetPlayer = findPlayer(choice, Cupid.game.players)
            this.choiceMsgEditText();
            this.puppetTargetPlayerChoice();
        }
    }
}