import {RoleBase} from "../Abstract/RoleBase";
import {generateInlineKeyboard} from "../../Game/playersButtons";
import {wolfTeam} from "../../Utils/teams";
import {findPlayer} from "../../Game/findPlayer";
import {GuardianAngel} from "../Villagers/GuardianAngel";
import {Beauty} from "../Villagers/Beauty";
import {highlightPlayer} from "../../Utils/highlightPlayer";

type DecisionType = 'kill' | 'protect';

export class FallenAngel extends RoleBase {
    roleName = '–ü–∞–¥—à–∏–π –∞–Ω–≥–µ–ª üëºüê∫';
    startMessageText = () => '–ë–æ–ª—å –ø—Ä–æ–±–µ–≥–∞–µ—Ç –ø–æ —Ç–≤–æ–µ–º—É —Ç–µ–ª—É, ' +
        '–∫–æ–≥–¥–∞ —Ç–≤–æ–∏ –±–µ–ª—ã–µ –∫—Ä—ã–ª—å—è —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —á–µ—Ä–Ω—ã–º–∏. ' +
        '–°–∫–≤–æ–∑—å –±–æ–ª—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç—ã –±–æ—Ä–µ—à—å—Å—è —Å —Å–æ–±–æ–π –∏ —Å —Ç–µ–º –∑–ª–æ–º, ' +
        '–∫–æ—Ç–æ—Ä–æ–µ –ø—ã—Ç–∞–µ—Ç—Å—è —Ç–æ–±–æ–π –æ–≤–ª–∞–¥–µ—Ç—å... ' +
        '–ù–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ - –∏ –≤—Å–µ –∫–æ–Ω—á–µ–Ω–æ. ' +
        '–¢—ã –≤—Å—Ç–∞–µ—à—å, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–µ–±—è: ' +
        '–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –æ—Ç —Ç–≤–æ–µ–π –ø—Ä–µ–∂–Ω–µ–π –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—Ä–∞—Å–æ—Ç—ã. ' +
        '–¢—ã —Å—Ç–∞–ª –ü–∞–¥—à–∏–º –ê–Ω–≥–µ–ª–æ–º, —Å–æ—é–∑–Ω–∏–∫–æ–º –≤–æ–ª–∫–æ–≤.'
    weight = () => -20; // can't drop at the start of the game anyway

    nightActionDone = false

    killOrProtect?: DecisionType;

    numberOfAttacks: number = 0;


    action = () => {
        this.targetPlayer = undefined;
        this.numberOfAttacks = 0;
        if (!this.killOrProtect)
            FallenAngel.game.bot.sendMessage(
                this.player.id,
                '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–µ–≥–æ–¥–Ω—è —Å–¥–µ–ª–∞—Ç—å?',
                {
                    reply_markup: {
                        inline_keyboard: [
                            [{
                                text: '–£–±–∏—Ç—å', callback_data: JSON.stringify({type: 'role', choice: 'kill'})
                            }],
                            [{
                                text: '–ó–∞—â–∏—Ç–∏—Ç—å', callback_data: JSON.stringify({type: 'role', choice: 'protect'})
                            }],
                        ]
                    }
                }
            ).then(msg => this.choiceMsgId = msg.message_id)
        else {
            if (this.killOrProtect === 'kill') {
                FallenAngel.game.bot.sendMessage(
                    this.player.id,
                    '–ö–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–µ–≥–æ–¥–Ω—è —É–±–∏—Ç—å?',
                    {
                        reply_markup: generateInlineKeyboard(FallenAngel.game.players
                            .filter(player => player !== this.player
                                && player.isAlive
                                && !(wolfTeam.find(wolfTeamPlayer => player.role instanceof wolfTeamPlayer))))
                    }
                ).then(msg => this.choiceMsgId = msg.message_id)
            } else {
                FallenAngel.game.bot.sendMessage(
                    this.player.id,
                    '–ö–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–µ–≥–æ–¥–Ω—è –∑–∞—â–∏—Ç–∏—Ç—å?',
                    {
                        reply_markup: generateInlineKeyboard(FallenAngel.game.players
                            .filter(player => player !== this.player
                                && player.isAlive
                                && wolfTeam.find(wolfTeamPlayer => player.role instanceof wolfTeamPlayer)))
                    }
                ).then(msg => this.choiceMsgId = msg.message_id)
            }
        }
    }

    actionResolve = () => {
        if (!this.targetPlayer) return

        if (this.killOrProtect === 'kill')
            if (this.targetPlayer.guardianAngel?.role instanceof GuardianAngel) {
                this.handleGuardianAngel(this.player);
                return;
            } else if (this.targetPlayer.role instanceof Beauty && this.targetPlayer.lover !== this.player)
                this.loveBind(this.targetPlayer)
            else
                this.targetPlayer.role?.onKilled(this.player);
        else // protect
            this.targetPlayer.guardianAngel = this.player;

        this.killOrProtect = undefined; // –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ–Ω –¥–æ–ª–∂–µ–Ω —É–±–∏–≤–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–≤—ã
    }

    actionResult = () => {
        if (!this.targetPlayer?.role) return;

        if (!this.numberOfAttacks) {
            GuardianAngel.game.bot.sendMessage(
                this.player.id,
                `${highlightPlayer(this.targetPlayer)} –Ω–µ –±—ã–ª(–∞) –∞—Ç–∞–∫–æ–≤–∞–Ω(–∞),` +
                '–ø–æ—ç—Ç–æ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –æ—Å–æ–±–æ...'
            )
        }
    }

    handleChoice = (choice?: string) => {
        if (choice === 'kill' || choice === 'protect') {
            this.killOrProtect = choice;
            this.choiceMsgEditText();
            this.player.role?.action && this.player.role?.action();
        } else {
            this.targetPlayer = findPlayer(choice, FallenAngel.game.players);
            super.choiceMsgEditText();
            this.doneNightAction();
        }
    }

    choiceMsgEditText = () => {
        FallenAngel.game.bot.editMessageText(
            `–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç: ${this.killOrProtect === 'kill' ? '–£–±–∏—Ç—å' : '–ó–∞—â–∏—Ç–∏—Ç—å'}.`,
            {
                message_id: this.choiceMsgId,
                chat_id: this.player.id,
            }
        )
    }
}
