import {Player} from "../../Player/Player";
import {playerLink} from "../../Utils/playerLink";
import {DeathType} from "../../Game";
import {RoleBase, SerialKiller, Wolf} from "../index";

export class Drunk extends RoleBase {
    roleName = '–ü—å—è–Ω–∏—Ü–∞ üç∫';
    startMessageText = () => `–ò—â–∏ —Å–µ–±–µ —Å–æ–±—É—Ç—ã–ª—å–Ω–∏–∫–æ–≤, —Ç–µ–±–µ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –¥–µ–ª–∞—Ç—å...` +
        `–û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ —Ç–µ–±—è –≤–¥—Ä—É–≥ –∫—Ç–æ-—Ç–æ —Å—ä–µ—Å—Ç, –æ–Ω –Ω–µ—Ö–∏–ª–æ –æ–ø—å—è–Ω–µ–µ—Ç`;
    weight = () => Drunk.game.players.find(player => player.role instanceof Wolf) ? 3 : 1;


    async handleDeath(killer?: Player, type?: DeathType): Promise<boolean> {
        if ((killer?.role instanceof Wolf || killer?.role instanceof SerialKiller) && !type) {
            let text: string = killer.role.killMessage().text.toChat(this.player);
            if (killer?.role instanceof Wolf) {
                killer.role.findAllies().forEach(wolfPlayer => wolfPlayer.daysLeftToUnfreeze = 2);
                killer.daysLeftToUnfreeze = 2;
                text = `–û–¥–∏–Ω –∏–∑ –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π —É—Ç—Ä–æ–º –æ–±–Ω–∞—Ä—É–∂–∏–ª —É —Å–µ–±—è –≤ –∑–∞–≥–æ–Ω–µ —Å–æ —Å–≤–∏–Ω—å—è–º–∏ —Å–∞–º–æ–≥–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ ` +
                    `–ü—å—è–Ω–∏—Ü—É ${playerLink(this.player)}, –∫–æ—Ç–æ—Ä—ã–π, –ø–æ —Å–ª–æ–≤–∞–º —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π, ` +
                    `—Ç—É—Å–æ–≤–∞–ª—Å—è –≤—Å—é –Ω–æ—á—å —Å–æ —Å–≤–∏–Ω—å—è–º–∏ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –∞ –ø–æ—Ç–æ–º –ø—Ä–∏—à–µ–ª –≤–æ–ª–∫ –∏ —Å—ä–µ–ª –µ–≥–æ!`;
            } else if (killer?.role instanceof SerialKiller) {
                text = `–°–µ–ª—è–Ω–µ –Ω–∞–¥–µ—è–ª–∏—Å—å –≤—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω-–¥—Ä—É–≥–æ–π —Å –ü—å—è–Ω–∏—Ü–µ–π ${playerLink(this.player)}, –Ω–æ, –∑–∞–π–¥—è ` +
                    `–∫ –Ω–µ–º—É –¥–æ–º–æ–π, –æ–Ω–∏ —É–≤–∏–¥–µ–ª–∏ —Ç–æ–ª—å–∫–æ —Å–ª–æ–º–∞–Ω–Ω—ã–π –Ω–æ–∂ –∏ –≤—ã—Ä–µ–∑–∞–Ω–Ω—É—é –ø–µ—á–µ–Ω—å.` +
                    `–û–Ω –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø–æ—Å–∞–¥–∏–ª —Å–µ–±–µ –ø–µ—á–µ–Ω—å, —á—Ç–æ –¥–∞–∂–µ –°–µ—Ä–∏–π–Ω—ã–π –£–±–∏–π—Ü–∞ –µ—é –ø–æ–±—Ä–µ–∑–≥–æ–≤–∞–ª.`;
            }

            await Drunk.game.bot.sendMessage(
                Drunk.game.chatId,
                text
            )

            await Drunk.game.bot.sendAnimation(
                this.player.id,
                killer.role.killMessage().gif,
                {
                    caption: killer.role.killMessage().text.toTarget
                }
            )

            this.player.isAlive = false;
            return true;
        }
        return super.handleDeath(killer, type);
    }
}