import {RoleBase} from "../index";
import {Player} from "../../Game";
import {generateInlineKeyboard} from "../../Game/playersButtons";
import {findPlayer} from "../../Game/findPlayer";
import {highlightPlayer} from "../../Utils/highlightPlayer";
import {specialConditionCupid} from "../../Utils/specialConditionTypes";
import {randomElement} from "../../Utils/randomElement";

export class Cupid extends RoleBase {
    readonly roleName = '–ö—É–ø–∏–¥–æ–Ω üèπ';

    readonly startMessageText = () => '–°–æ—à–µ–ª –Ω–∞ –∑–µ–º–ª—é –≤ –æ–¥–Ω–∏—Ö —à—Ç–∞–Ω–∞—Ö, —Å –ª—É–∫–æ–º –∏ –ª—é–±–æ–≤–Ω—ã–º–∏ —Å—Ç—Ä–µ–ª–∞–º–∏... –í—ã–±–µ—Ä–∏ –¥–≤—É—Ö, '
        + '–∫—Ç–æ –±—É–¥–µ—Ç –ª—é–±–∏—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –¥–æ —Å–∫–æ–Ω—á–∞–Ω–∏—è –≤–µ–∫–∞. –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –ø–æ–≥–∏–±–Ω–µ—Ç, –¥—Ä—É–≥–æ–π —É–º—Ä–µ—Ç –æ—Ç –ø–µ—á–∞–ª–∏.';

    readonly weight = () => 2;

    nightActionDone = false

    specialCondition: specialConditionCupid = {loversBound: false}

    targetPlayer2?: Player

    targets = () => Cupid.game.players.filter(player => player !== this.targetPlayer && player.isAlive)

    stealMessage = () => this.specialCondition.loversBound
        && '–û–¥–Ω–∞–∫–æ, —Ç—ã –≤–∏–¥–∏—à—å, —á—Ç–æ –≤ –∫–æ–ª—á–∞–Ω–µ –∫–æ–Ω—á–∏–ª–∏—Å—å –ª—é–±–æ–≤–Ω—ã–µ —Å—Ç—Ä–µ–ª—ã.'

    action = () => {
        if (!this.specialCondition.loversBound) this.loveArrowChoice()
        this.doneNightAction()
    }

    loveArrowChoice = () => Cupid.game.bot.sendMessage(
        this.player.id,
        '–ö–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–≤—è–∑–∞—Ç—å —É–∑–∞–º–∏ –≤–µ—á–Ω–æ–π –ª—é–±–≤–∏?',
        {
            reply_markup: generateInlineKeyboard(this.targets(), false)
        }
    ).then(msg => this.choiceMsgId = msg.message_id)

    handleChoice = (choice?: string) => {
        if (this.targetPlayer) {
            this.targetPlayer2 = findPlayer(choice, Cupid.game.players);
            this.targetPlayer2 && RoleBase.game.bot.editMessageText(
                `–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç ‚Äî ${highlightPlayer(this.targetPlayer2)}.`,
                {message_id: this.choiceMsgId, chat_id: this.player.id}
            ).then(this.doneNightAction)
        } else {
            this.targetPlayer = findPlayer(choice, Cupid.game.players)
            this.choiceMsgEditText().then(this.loveArrowChoice)
        }
    }

    actionResolve = async () => {
        this.specialCondition.loversBound = true
        if (!this.targetPlayer2) {
            if (!this.targetPlayer) this.targetPlayer = randomElement(this.targets())
            this.targetPlayer2 = randomElement(this.targets())
            await Cupid.game.bot.editMessageText(
                `–¢—ã –Ω–µ —É—Å–ø–µ–ª —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä, —Ç–∞–∫ —á—Ç–æ –≤—ã—Å—à–∏–µ —Å–∏–ª—ã —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä –∑–∞ —Ç–µ–±—è. `
                + `${highlightPlayer(this.targetPlayer)} –∏ ${highlightPlayer(this.targetPlayer2)} `
                + `—Ç–µ–ø–µ—Ä—å —Å–≤—è–∑–∞–Ω—ã –ª—é–±–æ–≤—å—é.`,
                {
                    chat_id: this.player.id,
                    message_id: this.choiceMsgId
                }
            )
        }
        this.targetPlayer?.loveBind(this.targetPlayer2)
    }
}
