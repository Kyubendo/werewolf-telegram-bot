import {Player} from "../../Player/Player";
import {highlightPlayer} from "../../Utils/highlightPlayer";
import {DeathType} from "../../Game";
import {RoleBase} from "../index";

export class Mason extends RoleBase {
    findOtherMasonPlayers = () => Mason.game.players.filter(otherPlayer =>
        otherPlayer.role instanceof Mason
        && otherPlayer !== this.player
        && otherPlayer.isAlive
    )

    showOtherMasonPlayers = () => {
        const allies = this.findOtherMasonPlayers();
        if (!allies?.length) return ''
        return (allies?.length > 1
                ? '\n–ö–∞–º–µ–Ω—â–∏–∫–∏: '
                : '\n–¢–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –Ω–∞ —Å—Ç—Ä–æ–π–∫–µ ‚Äî ')
            + allies?.map(ally => highlightPlayer(ally)).join(', ')
    }

    roleName = '–ö–∞–º–µ–Ω—â–∏–∫ üë∑';
    roleIntroductionText = () => ''
    startMessageText = () => `–¢–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å, –∫—Ä–æ–º–µ –∫–∞–∫ –∏–¥—Ç–∏ –∏ –ø–∞—Ö–∞—Ç—å –Ω–∞ —Å—Ç—Ä–æ–π–∫–µ, ` +
        `–≤–µ–¥—å —Ç—ã ${this.roleName}.` + this.showOtherMasonPlayers();
    weight = () => {
        const otherMasonsAmount = this.findOtherMasonPlayers().length;
        return (otherMasonsAmount ? 3 : 1) + otherMasonsAmount;
    }

    async handleDeath(killer?: Player, type?: DeathType): Promise<boolean> {
        if (killer?.role && !type) {
            await Mason.game.bot.sendMessage(
                Mason.game.chatId,
                `–ü—Ä–æ—Å–Ω—É–≤—à–∏—Å—å, –≤—Å–µ –Ω–∞—Ö–æ–¥—è—Ç —Ç–µ–ª–æ ${highlightPlayer(this.player)} –ø–æ–¥ –≥—Ä—É–¥–æ–π ` +
                `–∫–∞–º–Ω–µ–π, –∫—Ä–æ–≤—å —Ä–∞–∑–±—Ä—ã–∑–≥–∞–Ω–∞ –ø–æ–≤—Å—é–¥—É. *${this.roleName}* –º–µ—Ä—Ç–≤!`
            )

            killer?.role?.killMessage && await Mason.game.bot.sendAnimation(
                this.player.id,
                killer?.role?.killMessage().gif,
                {
                    caption: killer.role.killMessage().text.toTarget
                }
            )
            this.player.isAlive = false;
            return true;
        } else
            return super.handleDeath(killer, type);
    }
}