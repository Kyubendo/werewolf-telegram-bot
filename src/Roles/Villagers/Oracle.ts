import {ForecasterBase} from "../Abstract/ForecasterBase";
import {RoleBase} from "../Abstract/RoleBase";
import {GameStage} from "../../Game/Game";

export class Oracle extends ForecasterBase {
    roleName = '–û—Ä–∞–∫—É–ª üåÄ';
    startMessageText = () => `–¢—ã ${this.roleName}. –ö–∞–∂–¥—É—é –Ω–æ—á—å —Ç—ã –º–æ–∂–µ—à—å ` +
        '–≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –∏ —É–∑–Ω–∞—Ç—å –∫–µ–º –æ–Ω –ù–ï —è–≤–ª—è–µ—Ç—Å—è. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: —Ç–µ–±–µ —Å–∫–∞–∂—É—Ç —Ä–æ–ª—å –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ –≤ –∏–≥—Ä–µ, ' +
        '–∫—Ç–æ –≤—Å—ë –µ—â—ë –∂–∏–≤ :)';
    weight = () => 4;

    forecastGameStage: GameStage = 'night';

    forecastRoleName = (targetRole: RoleBase) => {
        const otherPlayers = Oracle.game.players.filter(player => player !== this.player
            && player.isAlive
            && player !== targetRole.player);
        const otherRole = otherPlayers[Math.floor(Math.random() * otherPlayers.length)].role;
        return `–ù–ï *${otherRole?.roleName}*!`;
    }

}