import {highlightPlayer} from "../../Utils/highlightPlayer";
import {RoleBase} from "../Abstract/RoleBase";
import {specialConditionMonarch} from "../../Utils/specialConditionTypes";

export class Monarch extends RoleBase {
    roleName = '–ú–æ–Ω–∞—Ä—Ö ü§¥';
    roleIntroductionText = () => `–¢—ã ${this.roleName}! `
    startMessageText = () => '–ö–∞–∫ —É –≥–ª–∞–≤—ã –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π —Å–µ–º—å–∏, —É —Ç–µ–±—è –µ—Å—Ç—å –≤–ª–∞—Å—Ç—å –≤ —ç—Ç–æ–π –¥–µ—Ä–µ–≤–Ω–µ... ' +
        '–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ, –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å! ' +
        `–¢—ã –º–æ–∂–µ—à—å –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–Ω–µ —Å–≤–æ—é –∫–æ—Ä–æ–Ω—É –∏ —Å–µ–º–µ–π–Ω–æ–µ –¥—Ä–µ–≤–æ, –∏ –æ–¥–∏–Ω –¥–µ–Ω—å –æ–Ω–∏ –ø–æ–∑–≤–æ–ª—è—Ç —Ç–µ–±–µ ` +
        `–≤–µ—Ä—à–∏—Ç—å –ø—Ä–∞–≤–æ—Å—É–¥–∏–µ –ª–∏—á–Ω–æ.`
    weight = () => 3;

    specialCondition: specialConditionMonarch = {
        comingOut: undefined
    }

    actionAnnouncement = () => ({
        message: `–ü–æ–∫–∞ –∂–∏—Ç–µ–ª–∏ –¥–µ—Ä–µ–≤–Ω–∏ –æ–±—Å—É–∂–¥–∞—é—Ç –Ω–æ—á–Ω—ã–µ –ø—Ä–æ–∏—à–µ—Å—Ç–≤–∏—è, ${highlightPlayer(this.player)} –¥–µ–ª–∞–µ—Ç ` +
            `—à–∞–≥ –≤–ø–µ—Ä–µ–¥, –ø—Ä–µ–¥–ª–∞–≥–∞—è –≤—Å–µ–º –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–æ—Ä–æ–Ω—É, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –ø—Ä—è—Ç–∞–ª —Ä–∞–Ω—å—à–µ.\n` +
            `–°–µ–≥–æ–¥–Ω—è *${this.roleName}* —Ä–µ—à–∏—Ç, –∫–æ–≥–æ –∫–∞–∑–Ω–∏—Ç—å.`,
        gif: 'https://media.giphy.com/media/okLCopqw6ElCDnIhuS/giphy.gif'
    })

    stealMessage = () => this.specialCondition.comingOut === false && `\n–û–¥–Ω–∞–∫–æ –≤—Å–µ –≤ –¥–µ—Ä–µ–≤–Ω–µ —É–∂–µ —É–∑–Ω–∞–ª–∏ –æ –º–æ–Ω–∞—Ä—Ö–µ!`;

    action = () => {
        if (this.specialCondition.comingOut) { // –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ comingOut –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
            this.specialCondition.comingOut = false;
            return;
        }
        if (this.specialCondition.comingOut === false) return;

        Monarch.game.bot.sendMessage(
            this.player.id,
            '–ñ–µ–ª–∞–µ—à—å –ª–∏ —Ç—ã —Ä–∞—Å–∫—Ä—ã—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è?',
            {
                reply_markup: {
                    inline_keyboard: [
                        [{text: '–†–∞—Å–∫—Ä—ã—Ç—å—Å—è', callback_data: JSON.stringify({type: 'role', choice: 'uncover'})}],
                        [{text: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data: JSON.stringify({type: 'role', choice: 'skip'})}],
                    ]
                }
            }
        ).then(msg => this.choiceMsgId = msg.message_id)
    }

    handleChoice = (choice?: string) => {
        if (choice !== 'uncover') {
            this.choiceMsgEditText();
            return;
        }

        this.specialCondition.comingOut = true;
        this.choiceMsgEditText();

        Monarch.game.bot.sendAnimation(
            Monarch.game.chatId,
            this.actionAnnouncement().gif, { caption: this.actionAnnouncement().message }
        )
    }

    choiceMsgEditText = () => {
        Monarch.game.bot.editMessageText(
            `–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç ‚Äî ${this.specialCondition.comingOut ? '–†–∞—Å–∫—Ä—ã—Ç—å—Å—è' : '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'}.`,
            {
                message_id: this.choiceMsgId,
                chat_id: this.player.id,
            }
        )
    }
}